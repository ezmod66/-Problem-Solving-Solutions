using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution
{

    /*
     * //kangaroo 1(K1) location x1 rate v1 meters per jump  
       //kangaroo 2(K2) location x2 rate v2 meters per jump

        K1 location will always be less than K2 location
        if v1 < v2 return no
        else
        if( v1 is not = v2) and (x2 - x1 ) % (v1-v2)) == 0 same location is == yes
        else location is == no

        first sample input =  0 3 4 2

        x1 = 0, x2 = 4, v1 = 3, v2 = 2

        ((v1 != v2) && ((x2 - x1) % (v1 - v2)) == 0)
           (3!=2) && (4 - 0) % (3-2) == 0) yes else return no
        
     */
    static string kangaroo(int x1, int v1, int x2, int v2)
    {
        string sameLocation = "";
        //
        if ((x1 < x2) && (v1 < v2))
            return sameLocation = "NO";
        else
        {
            if ((v1 != v2) && ((x2 - x1) % (v1 - v2)) == 0)
            {
                return sameLocation = "YES";
            }               
            else
            {
                return sameLocation = "NO";
            }              
        }

    }

    static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        string[] x1V1X2V2 = Console.ReadLine().Split(' ');

        int x1 = Convert.ToInt32(x1V1X2V2[0]);

        int v1 = Convert.ToInt32(x1V1X2V2[1]);

        int x2 = Convert.ToInt32(x1V1X2V2[2]);

        int v2 = Convert.ToInt32(x1V1X2V2[3]);

        string result = kangaroo(x1, v1, x2, v2);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}
